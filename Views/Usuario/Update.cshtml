@{ 
    ViewData["Title"] = "Actualizar Usuario";
}
@using tl2_tp10_2023_IvanDMir.ViewModels;
@model UUViewModel

<h1>@ViewData["Title"]</h1>
<form asp-controller="Usuario" asp-action="Update" class="needs-validation" novalidate>
    <div class="mb-3">
        <label for="usuario" class="form-label">Nuevo nombre de usuario</label>
        <input asp-for="@Model.Nombre" class="form-control" id="usuario" required>
        <div class="invalid-feedback">
            Por favor ingrese un nuevo nombre de usuario.
        </div>
    </div>
    <div class="mb-3">
        <label for="nuevapassword" class="form-label">Nueva contraseña</label>
        <input type="password" asp-for="@Model.Contrasena" class="form-control" id="nuevapassword" required>
        <div class="invalid-feedback">
            Por favor ingrese una nueva contraseña.
        </div>
    </div>
    <button type="submit" class="btn btn-primary">Actualizar Usuario</button>
</form>

@section Scripts {
    <script>
        (function () {
            'use strict'
            var forms = document.querySelectorAll('.needs-validation')
            Array.prototype.slice.call(forms)
                .forEach(function (form) {
                    form.addEventListener('submit', function (event) {
                        if (!form.checkValidity()) {
                            event.preventDefault()
                            event.stopPropagation()    // Con esto puedo mostrar los carteles de forma dinamica
                        }

                        form.classList.add('was-validated')
                    }, false)
                })
        })()
    </script>
}
